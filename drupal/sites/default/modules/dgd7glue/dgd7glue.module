<?php
/**
 * @file
 *  Site-specific custom code for DefinitiveDrupal.org.
 */

/**
 * Implements hook_boot().
 *
 * Another approach would allow http://example.com/53/edit to work:
 * if (is_numeric(substr($_GET['q'], strpos($_GET['q'], '/')))) {
 *
 * @TODO replace with http://drupal.org/node/933888 when it lands.
 */
function dgd7glue_boot() {
  if (is_numeric($_GET['q'])) {
    $_GET['q'] = 'node/' . $_GET['q'];
  }
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function dgd7glue_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  // Add action link to 'node/add/suggestion' on 'suggestions' page.
  if ($root_path == 'suggestions') {
    $item = menu_get_item('node/add/suggestion');
    if ($item['access']) {
      $data['actions']['output'][] = array(
        '#theme' => 'menu_local_action',
        '#link' => $item,
      );
    }
  }
}

/**
 * Implements hook_node_view().
 */
function dgd7glue_node_view($node, $view_mode, $langcode) {
  // Print prev/next links on Suggestion node pages.
  if ($node->type == 'suggestion' && $view_mode == 'full') {
    $next = dgd7glue_nextprev_suggestion($node->nid); 
    $prev = dgd7glue_nextprev_suggestion($node->nid, TRUE);
    // Make a fake book link array.
    $link = array();
    $link['dgd7glue'] = TRUE;
    $link['prev'] = $prev;
    $link['next'] = $next;
    $node->content['dgd7glue_prevnext'] = array(
      '#markup' => theme('book_navigation', array('book_link' => $link)),
      '#weight' => 100,
    );
  }
}

function dgd7glue_theme_registry_alter(&$theme_registry) {
  // Replace the default preprocess function with our own.
  foreach ($theme_registry['book_navigation']['preprocess functions'] as $key => $value) {
    if ($value == 'template_preprocess_book_navigation') {
      $theme_registry['book_navigation']['preprocess functions'][$key] = 'dgd7glue_template_preprocess_book_navigation';
      // Once it's found it we're done.
      break;
    }
  }
}

/**
 * Replaces template_preprocess_book_navigation() when using tpl for non-books.
 *
 * The sad, sordid history of this hack is summarized at  
 */
function dgd7glue_template_preprocess_book_navigation(&$variables) {
  if (!isset($variables['book_link']['dgd7glue'])) {
    // This is a normal book, just use the usual function.
    template_preprocess_book_navigation($variables);
    return;
  }
  // Use our fake book_link variable to provide all the same variables.
  $link = $variables['book_link'];
  $variables['book_id'] = 'dgd7glue-nextprev';
  $variables['book_title'] = t('Suggestions');
  $variables['book_url'] = url('suggestions');
  $variables['current_depth'] = 0;
  $variables['tree'] = '';
  $variables['has_links'] = TRUE;
  $variables['prev_url'] = NULL; 
  $variables['next_url'] = NULL; 
  if ($link['prev']) {
    $prev_href = url('node/' . $link['prev']['nid']);
    drupal_add_html_head_link(array('rel' => 'prev', 'href' => $prev_href));
    $variables['prev_url'] = $prev_href;
    $variables['prev_title'] = check_plain($link['prev']['title']);
  }

  $parent_href = $variables['book_url'];
  drupal_add_html_head_link(array('rel' => 'up', 'href' => $parent_href));
  $variables['parent_url'] = $parent_href;
  $variables['parent_title'] = $variables['book_title'];

  if ($link['next']) {
    $next_href = url('node/' . $link['next']['nid']);
    drupal_add_html_head_link(array('rel' => 'next', 'href' => $next_href));
    $variables['next_url'] = $next_href;
    $variables['next_title'] = check_plain($link['next']['title']);
  }
}

/**
 * Get the next or previous suggestion node nid and title.
 */
function dgd7glue_nextprev_suggestion($nid, $previous = FALSE) {
  // Set the ORDER BY direction and the comparison operator ($co).
  if ($previous) {
    $direction = 'DESC';
    $co = '<';
  }
  else {
    $direction = 'ASC';
    $co = '>';
  }
  return db_query_range("SELECT title, nid FROM {node} WHERE nid $co :nid AND type = :type AND status = :status ORDER BY nid $direction", 0, 1, array(':nid' => $nid, ':type' => 'suggestion', 'status' => 1))->fetchAssoc();
}

/**
 * Implements hook_remarkup_defaults().
 */
function dgd7glue_remarkup_defaults() {
  $rm = array();
  // Define the simple tips-style replacements, machine and human-readable.
  $tips = array(
    'tip' => t('Tip'),
    'note' => t('Note'),
    'hint' => t('Hint'),
    'reality' => t('Reality'),
    'caution' => t('Caution'),
    'gotcha' => t('Gotcha'),
    'new' => t('New in 7'),
  );
  foreach ($tips as $type => $name) {
    $rm['[/' . $type . ']'] = array(
      'before' => '<div class="dgd7-featured dgd7-' . $type . '"><strong class="dgd7-name">' . $name . '</strong>',
      'after' => '</div>',
    );
  }
  // A few rules are unique.
  $rm['[/file-txt]'] = array(
      'before' => '<code>',
      'after' => '</code>',
  );
  // Requires codefilter module, with its filter set to run after remarkup.
  $rm['[/file-php]'] = array(
      'before' => '<?php',
      'after' => '?>',
  );
  $rm['[/cli]'] = array(
    'before' => '<h4>Command-line steps</h4>
    <tt>',
    'after' => '</tt>',
  );
  return $rm;
}

/**
 * Implements hook_field_formatter_info().
 */
function dgd7glue_field_formatter_info() {
  return array(
    'dgd7glue_number_account_link' => array(
      'label' => t('Account link'),
      'field types' => array('number_integer'),
    ),
    'dgd7glue_text_account_link' => array(
      'label' => t('Account link'),
      'field types' => array('text'),
    ),
  );
}

/**
 * Menu callback for listing profile nodes for the Author biographies section.
 */
function dgd7glue_profiles() {
  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'node', '=')
          ->propertyCondition('type', 'profile', '=')
          ->fieldOrderBy('field_pagecount', 'value', 'DESC')
          ->execute();

  return node_view_multiple(node_load_multiple(array_keys($result['node'])), 'teaser');
}
